@page "/adduser"
@using FribergRentals.Data.Repositories
@using FribergRentals.Data.Models
@using FribergRentals.Data.Interfaces

<h3>Add a new user</h3>

<EditForm Model="Customer" OnSubmit="Submit" FormName="new-user-form">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <dl>
            <dt>Firstname</dt>
            <dd>
                <InputText @bind-Value="Customer!.FirstName" />
            </dd>
            <dt>Lastname</dt>
                <dd>
                <InputText @bind-Value="Customer!.LastName" />
                </dd>
            <dt>Email</dt>
                <dd>
                <InputText @bind-Value="Customer!.Email" />
                </dd>
                <dt>Password</dt>
            <dd>
                <InputText type="password" @bind-Value="Customer!.Password"></InputText>
            </dd>
            <dt>Confirm Password</dt>
            <dd>
                <InputText type="password" @bind-Value="Customer!.ConfirmPassword"></InputText>
            </dd>
         </dl>
    </div>
    <div>
        <button type="submit">Add user</button>
    </div>
</EditForm>

<p>@Confirm</p>

@if(BackLinkVisible)
{
    <NavLink href="/" Match="@NavLinkMatch.All">Go back</NavLink>
}

@code {
    [SupplyParameterFromForm]
    public Customer Customer { get; set; }
    public string Id { get; set; }
    public string Confirm;
    public bool BackLinkVisible = false;
    protected override void OnInitialized() => Customer ??= new();

    async Task Submit()
    {
        if (Customer != null)
        {
            Customer.Id = 0;
            List<User> allUsers = await CustomerRepo.GetAllAsync();
            bool userExists = false;
            foreach(var user in allUsers)
            {
                if(user.Email == Customer.Email)
                {
                    userExists = true;
                }
            }
            if (!userExists)
            {
                await CustomerRepo.AddAsync(Customer);
                Confirm = "User added";
            }
            else
            {
                Confirm = "An account with that email address already exists!";
            }
        }
        else
        {
            Confirm = "Something went wrong, try again!";
        }
        BackLinkVisible = true;
    }
}
